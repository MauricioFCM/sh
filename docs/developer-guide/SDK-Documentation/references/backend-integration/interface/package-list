$dokka.format:jekyll-v1
$dokka.linkExtension:html
$dokka.location:healthstack.backend.integration.exception////PointingToDeclaration/interface/healthstack.backend.integration.exception/index.html
$dokka.location:healthstack.backend.integration.exception/RegisterException///PointingToDeclaration/interface/healthstack.backend.integration.exception/-register-exception/index.html
$dokka.location:healthstack.backend.integration.exception/RegisterException/RegisterException/#/PointingToDeclaration/interface/healthstack.backend.integration.exception/-register-exception/-register-exception.html
$dokka.location:healthstack.backend.integration.exception/UserAlreadyExistsException///PointingToDeclaration/interface/healthstack.backend.integration.exception/-user-already-exists-exception/index.html
$dokka.location:healthstack.backend.integration.exception/UserAlreadyExistsException/UserAlreadyExistsException/#/PointingToDeclaration/interface/healthstack.backend.integration.exception/-user-already-exists-exception/-user-already-exists-exception.html
$dokka.location:healthstack.backend.integration.healthdata////PointingToDeclaration/interface/healthstack.backend.integration.healthdata/index.html
$dokka.location:healthstack.backend.integration.healthdata/HealthDataSyncClient///PointingToDeclaration/interface/healthstack.backend.integration.healthdata/-health-data-sync-client/index.html
$dokka.location:healthstack.backend.integration.healthdata/HealthDataSyncClient/sync/#kotlin.String#healthstack.healthdata.link.HealthData/PointingToDeclaration/interface/healthstack.backend.integration.healthdata/-health-data-sync-client/sync.html
$dokka.location:healthstack.backend.integration.registration////PointingToDeclaration/interface/healthstack.backend.integration.registration/index.html
$dokka.location:healthstack.backend.integration.registration/User///PointingToDeclaration/interface/healthstack.backend.integration.registration/-user/index.html
$dokka.location:healthstack.backend.integration.registration/User/User/#kotlin.String#kotlin.collections.Map[kotlin.String,kotlin.Any]/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user/-user.html
$dokka.location:healthstack.backend.integration.registration/User/profile/#/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user/profile.html
$dokka.location:healthstack.backend.integration.registration/User/userId/#/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user/user-id.html
$dokka.location:healthstack.backend.integration.registration/UserProfile///PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-profile/index.html
$dokka.location:healthstack.backend.integration.registration/UserProfile/UserProfile/#kotlin.collections.Map[kotlin.String,kotlin.Any]/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-profile/-user-profile.html
$dokka.location:healthstack.backend.integration.registration/UserProfile/profile/#/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-profile/profile.html
$dokka.location:healthstack.backend.integration.registration/UserRegistrationClient///PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-registration-client/index.html
$dokka.location:healthstack.backend.integration.registration/UserRegistrationClient/registerUser/#kotlin.String#healthstack.backend.integration.registration.User/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-registration-client/register-user.html
$dokka.location:healthstack.backend.integration.registration/UserRegistrationClient/updateUser/#kotlin.String#kotlin.String#healthstack.backend.integration.registration.UserProfile/PointingToDeclaration/interface/healthstack.backend.integration.registration/-user-registration-client/update-user.html
$dokka.location:healthstack.backend.integration.task////PointingToDeclaration/interface/healthstack.backend.integration.task/index.html
$dokka.location:healthstack.backend.integration.task/ChoiceProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-choice-properties/index.html
$dokka.location:healthstack.backend.integration.task/ChoiceProperties/ChoiceProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?#kotlin.collections.List[healthstack.backend.integration.task.Option]/PointingToDeclaration/interface/healthstack.backend.integration.task/-choice-properties/-choice-properties.html
$dokka.location:healthstack.backend.integration.task/ChoiceProperties/options/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-choice-properties/options.html
$dokka.location:healthstack.backend.integration.task/Contents///PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/index.html
$dokka.location:healthstack.backend.integration.task/Contents/Contents/#kotlin.String#kotlin.Boolean#kotlin.String?#kotlin.String?#healthstack.backend.integration.task.ItemProperties?#kotlin.String?#kotlin.String?/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/-contents.html
$dokka.location:healthstack.backend.integration.task/Contents/completionDescription/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/completion-description.html
$dokka.location:healthstack.backend.integration.task/Contents/completionTitle/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/completion-title.html
$dokka.location:healthstack.backend.integration.task/Contents/explanation/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/explanation.html
$dokka.location:healthstack.backend.integration.task/Contents/itemProperties/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/item-properties.html
$dokka.location:healthstack.backend.integration.task/Contents/required/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/required.html
$dokka.location:healthstack.backend.integration.task/Contents/title/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/title.html
$dokka.location:healthstack.backend.integration.task/Contents/type/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-contents/type.html
$dokka.location:healthstack.backend.integration.task/DateTimeProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-date-time-properties/index.html
$dokka.location:healthstack.backend.integration.task/DateTimeProperties/DateTimeProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?#kotlin.Boolean#kotlin.Boolean#kotlin.Boolean/PointingToDeclaration/interface/healthstack.backend.integration.task/-date-time-properties/-date-time-properties.html
$dokka.location:healthstack.backend.integration.task/DateTimeProperties/isDate/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-date-time-properties/is-date.html
$dokka.location:healthstack.backend.integration.task/DateTimeProperties/isRange/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-date-time-properties/is-range.html
$dokka.location:healthstack.backend.integration.task/DateTimeProperties/isTime/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-date-time-properties/is-time.html
$dokka.location:healthstack.backend.integration.task/Item///PointingToDeclaration/interface/healthstack.backend.integration.task/-item/index.html
$dokka.location:healthstack.backend.integration.task/Item/Item/#kotlin.String#kotlin.String#healthstack.backend.integration.task.Contents#kotlin.Int/PointingToDeclaration/interface/healthstack.backend.integration.task/-item/-item.html
$dokka.location:healthstack.backend.integration.task/Item/contents/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item/contents.html
$dokka.location:healthstack.backend.integration.task/Item/name/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item/name.html
$dokka.location:healthstack.backend.integration.task/Item/sequence/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item/sequence.html
$dokka.location:healthstack.backend.integration.task/Item/type/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item/type.html
$dokka.location:healthstack.backend.integration.task/ItemProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-item-properties/index.html
$dokka.location:healthstack.backend.integration.task/ItemProperties/ItemProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-properties/-item-properties.html
$dokka.location:healthstack.backend.integration.task/ItemProperties/skipLogic/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-properties/skip-logic.html
$dokka.location:healthstack.backend.integration.task/ItemProperties/tag/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-properties/tag.html
$dokka.location:healthstack.backend.integration.task/ItemResult///PointingToDeclaration/interface/healthstack.backend.integration.task/-item-result/index.html
$dokka.location:healthstack.backend.integration.task/ItemResult/ItemResult/#kotlin.String#kotlin.String/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-result/-item-result.html
$dokka.location:healthstack.backend.integration.task/ItemResult/itemName/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-result/item-name.html
$dokka.location:healthstack.backend.integration.task/ItemResult/result/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-item-result/result.html
$dokka.location:healthstack.backend.integration.task/Option///PointingToDeclaration/interface/healthstack.backend.integration.task/-option/index.html
$dokka.location:healthstack.backend.integration.task/Option/Option/#kotlin.String#kotlin.String?/PointingToDeclaration/interface/healthstack.backend.integration.task/-option/-option.html
$dokka.location:healthstack.backend.integration.task/Option/label/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-option/label.html
$dokka.location:healthstack.backend.integration.task/Option/value/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-option/value.html
$dokka.location:healthstack.backend.integration.task/PropertyDeserializer///PointingToDeclaration/interface/healthstack.backend.integration.task/-property-deserializer/index.html
$dokka.location:healthstack.backend.integration.task/PropertyDeserializer/PropertyDeserializer/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-property-deserializer/-property-deserializer.html
$dokka.location:healthstack.backend.integration.task/PropertyDeserializer/deserialize/#com.google.gson.JsonElement?#java.lang.reflect.Type?#com.google.gson.JsonDeserializationContext?/PointingToDeclaration/interface/healthstack.backend.integration.task/-property-deserializer/deserialize.html
$dokka.location:healthstack.backend.integration.task/RankingProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-ranking-properties/index.html
$dokka.location:healthstack.backend.integration.task/RankingProperties/RankingProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?#kotlin.collections.List[healthstack.backend.integration.task.Option]/PointingToDeclaration/interface/healthstack.backend.integration.task/-ranking-properties/-ranking-properties.html
$dokka.location:healthstack.backend.integration.task/RankingProperties/options/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-ranking-properties/options.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/index.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties/ScaleProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?#kotlin.Int#kotlin.Int#kotlin.String?#kotlin.String?/PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/-scale-properties.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties/high/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/high.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties/highLabel/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/high-label.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties/low/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/low.html
$dokka.location:healthstack.backend.integration.task/ScaleProperties/lowLabel/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-scale-properties/low-label.html
$dokka.location:healthstack.backend.integration.task/SkipLogic///PointingToDeclaration/interface/healthstack.backend.integration.task/-skip-logic/index.html
$dokka.location:healthstack.backend.integration.task/SkipLogic/SkipLogic/#kotlin.String#kotlin.Int/PointingToDeclaration/interface/healthstack.backend.integration.task/-skip-logic/-skip-logic.html
$dokka.location:healthstack.backend.integration.task/SkipLogic/condition/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-skip-logic/condition.html
$dokka.location:healthstack.backend.integration.task/SkipLogic/goToItemSequence/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-skip-logic/go-to-item-sequence.html
$dokka.location:healthstack.backend.integration.task/TaskClient///PointingToDeclaration/interface/healthstack.backend.integration.task/-task-client/index.html
$dokka.location:healthstack.backend.integration.task/TaskClient/getTasks/#kotlin.String#java.time.LocalDateTime#java.time.LocalDateTime/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-client/get-tasks.html
$dokka.location:healthstack.backend.integration.task/TaskClient/uploadTaskResult/#kotlin.String#healthstack.backend.integration.task.TaskResult/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-client/upload-task-result.html
$dokka.location:healthstack.backend.integration.task/TaskClient/uploadTaskResultAsFile/#kotlin.String#kotlin.String#kotlin.String/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-client/upload-task-result-as-file.html
$dokka.location:healthstack.backend.integration.task/TaskResult///PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/index.html
$dokka.location:healthstack.backend.integration.task/TaskResult/TaskResult/#kotlin.String#kotlin.String#kotlin.Int#kotlin.String#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.ItemResult]/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/-task-result.html
$dokka.location:healthstack.backend.integration.task/TaskResult/itemResults/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/item-results.html
$dokka.location:healthstack.backend.integration.task/TaskResult/revisionId/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/revision-id.html
$dokka.location:healthstack.backend.integration.task/TaskResult/startedAt/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/started-at.html
$dokka.location:healthstack.backend.integration.task/TaskResult/submittedAt/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/submitted-at.html
$dokka.location:healthstack.backend.integration.task/TaskResult/taskId/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/task-id.html
$dokka.location:healthstack.backend.integration.task/TaskResult/userId/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-result/user-id.html
$dokka.location:healthstack.backend.integration.task/TaskSpec///PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/index.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/TaskSpec/#kotlin.Int#kotlin.String#kotlin.String#kotlin.String#kotlin.String?#kotlin.String#kotlin.String#kotlin.String#kotlin.Long#kotlin.collections.List[healthstack.backend.integration.task.Item]/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/-task-spec.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/description/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/description.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/endTime/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/end-time.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/items/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/items.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/revisionId/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/revision-id.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/schedule/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/schedule.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/startTime/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/start-time.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/taskId/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/task-id.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/title/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/title.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/type/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/type.html
$dokka.location:healthstack.backend.integration.task/TaskSpec/validTime/#/PointingToDeclaration/interface/healthstack.backend.integration.task/-task-spec/valid-time.html
$dokka.location:healthstack.backend.integration.task/TextProperties///PointingToDeclaration/interface/healthstack.backend.integration.task/-text-properties/index.html
$dokka.location:healthstack.backend.integration.task/TextProperties/TextProperties/#kotlin.String#kotlin.collections.List[healthstack.backend.integration.task.SkipLogic]?/PointingToDeclaration/interface/healthstack.backend.integration.task/-text-properties/-text-properties.html
$dokka.location:healthstack.backend.integration////PointingToDeclaration/interface/healthstack.backend.integration/index.html
$dokka.location:healthstack.backend.integration/BackendFacade///PointingToDeclaration/interface/healthstack.backend.integration/-backend-facade/index.html
$dokka.location:healthstack.backend.integration/BackendFacadeHolder///PointingToDeclaration/interface/healthstack.backend.integration/-backend-facade-holder/index.html
$dokka.location:healthstack.backend.integration/BackendFacadeHolder/getInstance/#/PointingToDeclaration/interface/healthstack.backend.integration/-backend-facade-holder/get-instance.html
$dokka.location:healthstack.backend.integration/BackendFacadeHolder/initialize/#healthstack.backend.integration.BackendFacade/PointingToDeclaration/interface/healthstack.backend.integration/-backend-facade-holder/initialize.html
healthstack.backend.integration
healthstack.backend.integration.exception
healthstack.backend.integration.healthdata
healthstack.backend.integration.registration
healthstack.backend.integration.task

