global
	lua-load /usr/local/etc/haproxy/cors.lua
defaults
	log global
	mode http
	timeout connect 5000ms
	timeout client 50000ms
	timeout server 50000ms
	option httplog
	log stdout local0

frontend stats
	bind *:8404
	stats enable
	stats uri /
	stats refresh 10s
frontend http_frontend
	bind :8080
	compression algo gzip
	compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json

	# CORS configuration
	# please update CORS configuration if you want to restrict API access 
	# http-request lua.cors "GET,PUT,POST" "example.com,localhost,localhost:8080" "X-Custom-Header1,X-Custom-Header2"

	http-request capture req.hdr(Origin) len 20
	http-request lua.cors "*" "*" "*"
	http-response lua.cors 
	
	acl has_account-service path_beg /account-service
    	acl has_sql_query path_reg ^\/api\/projects\/[0-9]*\/sql$
    	acl has_graphql_query path_reg ^\/api\/projects\/[0-9]*\/graphql$
    	acl has_platform path_beg /api/projects
	acl has_storage path_beg /cloud-storage
   
    	use_backend account-service if has_account-service
    	use_backend query-service if has_sql_query
    	use_backend query-service if has_graphql_query
	use_backend platform if has_platform
	use_backend storage-service if has_storage
	
	default_backend empty


backend platform
	http-request set-header Host localhost
	http-response set-header Server None
	server platform hrp-platform:3030 check
backend account-service
	http-request set-header Host localhost
	http-response set-header Server None
	server account-service hrp-account-service:8080 check
backend query-service
	http-request set-header Host localhost
	http-response set-header Server None
	server query-service hrp-data-query-service:3030 check
backend storage-service
        http-request set-header Host localhost
        http-response set-header Server None
        server query-service hrp-cloud-storage-service:8080 check


backend empty
	errorfile 503 /usr/local/etc/haproxy/errors/404.http
