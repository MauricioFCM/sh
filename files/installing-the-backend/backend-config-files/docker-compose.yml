version: '3.5'

services:
  postgres:
    container_name: hrp-postgres
    image: postgres:14.5
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    networks:
      - hrp
    restart: unless-stopped 
  supertokens:
    container_name: hrp-supertokens
    image: supertokens/supertokens-postgresql
    depends_on:
        - postgres
    environment:
        POSTGRESQL_USER: ${POSTGRESQL_USER:-postgres}
        POSTGRESQL_HOST: ${POSTGRESQL_HOST:-hrp-postgres}
        POSTGRESQL_PORT: ${POSTGRESQL_PORT:-5432}
        POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD:-password}
        POSTGRESQL_DATABASE_NAME: ${POSTGRESQL_DATABASE_NAME:-supertokens}
    ports:
        - "3567:3567"
    networks:
        - hrp
  platform:
    container_name: hrp-platform
    image: hrp-platform:0.9.0
    depends_on:
        - postgres
    environment:
        DB_HOST: ${DB_HOST:-hrp-postgres}
        DB_PASSWORD: ${DB_HOST:-password}
        GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS:-service-account-key.json}
        JWK_URL: ${JWK_URL:-http://hrp-supertokens:3567/recipe/jwt/jwks}
        ACCOUNT_SERVICE_URL: ${ACCOUNT_SERVICE_URL:-http://hrp-account-service:8081}
    ports:
        - "3030:3030"
    networks:
      - hrp
  account-service:
    container_name: hrp-account-service
    image: account-service:0.9.0
    depends_on:
        - supertokens
    environment:
        SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
        SMTP_PORT: ${SMTP_PORT:-465}
        MAIL_USER: ${MAIL_USER:-testl@gmail.com}
        MAIL_USER_PASSWORD: ${MAIL_USER_PASSWORD:-PasswordTest}
        SUPER_TOKEN_URL: ${SUPER_TOKEN_URL:-http://hrp-supertokens:3567}
        JWK_URL: ${JWK_URL:-http://hrp-supertokens:3567/recipe/jwt/jwks}
        
    ports:
        - "8081:8081"
    networks:
        - hrp
  trino:
    container_name: hrp-trino
    image: trinodb/trino:402
    depends_on:
        - postgres
    ports:
        - "8080:8080"
    volumes:
        - ./rule-update/:/etc/trino/access-control/
        - ./trino/etc/catalog/jvm.config:/etc/jvm.config
        - ./trino/etc/postgresql/postgresql.properties:/etc/trino/catalog/postgresql.properties
    networks:
        - hrp

  data-query-service:
    container_name: hrp-data-query-service
    image: hrp-data-query-service:0.9.0
    depends_on:
        - trino
    environment:
        TRINO_CATALOG: ${TRINO_CATALOG:-postgresql}
        TRINO_HOST: ${TRINO_HOST:-hrp-trino}
        TRINO_PORT: ${TRINO_PORT:-8080}
        JWK_URL: ${JWK_URL:-http://hrp-supertokens:3567/recipe/jwt/jwks}
        debug: true
    ports:
        - "3031:3031"
    networks:
        - hrp
  trino-rule-update-service:
    container_name: hrp-trino-rule-update-service
    image: trino-rule-update-service:0.9.0
    environment:
        FIXED_DELAY_MILLISEC: ${FIXED_DELAY_MILLISEC:-5000}
        ACCOUNT_SERVICE_URL: ${ACCOUNT_SERVICE_URL:-http://hrp-account-service:8081}
    depends_on:
        - account-service
    volumes:
        - ./rule-update/rules.json:/etc/trino/access-control/rules.json
    networks:
        - hrp
  web:
    container_name: open-source-portal
    image: docker.io/library/open-source-portal
    depends_on:
        - account-service
    ports:
      - "80:80"
    networks:
      - hrp
    restart: unless-stopped 
  haproxy:
    image: haproxy:2.6.6
    container_name: hrp-balancer
    depends_on:
        - web
    ports:
      - "3035:3035"
      - "8404:8404"
    volumes:
        - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
        - ./haproxy/404.http:/usr/local/etc/haproxy/errors/404.http:ro
        - ./haproxy/cors-origins.lst:/usr/local/etc/haproxy/cors-origins.lst:ro
        - ./haproxy/cors.lua:/usr/local/etc/haproxy/cors.lua:ro
    networks:
      - hrp
    restart: unless-stopped
networks:
  hrp:
    external: true
    driver: bridge